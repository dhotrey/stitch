"""
---------------------------------------------------------------------------------
Encoder's Order of Execution:

Setup.py -> Gets Input from user for BaseQRData and SecretData. Finds values that
    |       are required for Image Generator -> REDIS
    |
Conversion.go -> Converts SecretData and Chunks it according to the parameters
& Chunking.go    passed by setup.py to REDIS
    | 
    |
ImageGenerator.py -> Gets called X no of times depending on the number of chunks
    |                generated by Chunking.go and places all the pngs in a folder
    |
gif.go/ mp4.go -> Converts the aforementioned imgs in the folder to a gif or mp4
---------------------------------------------------------------------------------
"""

import redis
import argparse
import logging

import setup
from utils.ImageEncoder import main as ImageEncoder

if __name__ == "__main__":
    BlockSize = 100

    BaseQRData = input("Enter Base QR Code Data: ")
    SecretData = input("Enter Secret Data to Embed: ")

    rdb = redis.Redis()
    
    # Run Setup.py - to get initial parameters
    QRMatrix, LenofQRMatrix, ViableBlockAltCoordLst, UniqueFolder = setup.main(BaseQRData)

    # Set Secret Data to Redis
    rdb.set('SecretData',SecretData)
    rdb.set('ChunkingSize',len(ViableBlockAltCoordLst))

    # Run Compression, Conversion, Chunking
    # TODO

    # Run for loop to generate qr codes
    ImageEncoder()

    # Run conversion to gif
    #TODO
