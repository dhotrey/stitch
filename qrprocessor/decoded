get secretData: 
To-Do:
- Design UI -> (Pinac and Aryan)
- Code UI in Textualize -> (Aryan)
- Implement Numpy in worker code to increase efficiency -> (Pinac)
- Implement Redis -> (Aryan)
- Write Image Assembler to given Output format (mp4, gif, etc)-> (Aryan)
- Write Data Biforcation code to distribute to worker -> (Aryan)

user raw data -> compression -> split into chunks -> reddis

reddis -/- encoderMain
     | -/- encoderWorker
-/- assembler



- Remove Chunking in encoder main

hello = bytes string
compressed_hello = 10 bytes
chunks_ch = 2 bytes * 5 chunks

Input: BaseQRData , Secret Data

Conversion: BaseQRData(String) -> Base QR Code(Nested List) (Which is used by Image Generator to generate mutiple QR Code with Secret Data Embedded)

Conversion: Secret Data(String) -> Compression -> Bits(String of 1's & 0's)

File: BaseQRData -> Setup.py
File: Secret Data -> main.go (idk the file name)

---------------------------------------------------------------------------------
Encoder's Order of Execution:

Setup.py -> Gets Input from user for BaseQRData and SecretData. Finds values that
    |       are required for Image Generator -> REDIS
    |
Conversion.go -> Converts SecretData and Chunks it according to the parameters
& Chunking.go    passed by setup.py to REDIS
    |
    |
ImageGenerator.py -> Gets called X no of times depending on the number of chunks
    |                generated by Chunking.go and places all the pngs in a folder
    |
gif.go/ mp4.go -> Converts the aforementioned imgs in the folder to a gif or mp4
---------------------------------------------------------------------------------

QRMatrix: list,
    LenofMatrix: int,
    VBACoordLst: list,
    UniqueFolder: str,
    imgIteration: int = 0,
    Blocksize: int = 100,
    BitData:
